#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusinessApp
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BusinessDB")]
	public partial class BusinessAppDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblState(tblState instance);
    partial void UpdatetblState(tblState instance);
    partial void DeletetblState(tblState instance);
    partial void InserttblCustomer(tblCustomer instance);
    partial void UpdatetblCustomer(tblCustomer instance);
    partial void DeletetblCustomer(tblCustomer instance);
    partial void InserttblDepartment(tblDepartment instance);
    partial void UpdatetblDepartment(tblDepartment instance);
    partial void DeletetblDepartment(tblDepartment instance);
    partial void InserttblDevice_Type(tblDevice_Type instance);
    partial void UpdatetblDevice_Type(tblDevice_Type instance);
    partial void DeletetblDevice_Type(tblDevice_Type instance);
    partial void InserttblEmployee(tblEmployee instance);
    partial void UpdatetblEmployee(tblEmployee instance);
    partial void DeletetblEmployee(tblEmployee instance);
    partial void InserttblOrder_Item(tblOrder_Item instance);
    partial void UpdatetblOrder_Item(tblOrder_Item instance);
    partial void DeletetblOrder_Item(tblOrder_Item instance);
    partial void InserttblOrder_Status(tblOrder_Status instance);
    partial void UpdatetblOrder_Status(tblOrder_Status instance);
    partial void DeletetblOrder_Status(tblOrder_Status instance);
    partial void InserttblOrder(tblOrder instance);
    partial void UpdatetblOrder(tblOrder instance);
    partial void DeletetblOrder(tblOrder instance);
    partial void InserttblProductBrand(tblProductBrand instance);
    partial void UpdatetblProductBrand(tblProductBrand instance);
    partial void DeletetblProductBrand(tblProductBrand instance);
    partial void InserttblService_Type(tblService_Type instance);
    partial void UpdatetblService_Type(tblService_Type instance);
    partial void DeletetblService_Type(tblService_Type instance);
    partial void InserttblProductItem(tblProductItem instance);
    partial void UpdatetblProductItem(tblProductItem instance);
    partial void DeletetblProductItem(tblProductItem instance);
    #endregion
		
		public BusinessAppDataContext() : 
				base(global::BusinessApp.Properties.Settings.Default.BusinessDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BusinessAppDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BusinessAppDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BusinessAppDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BusinessAppDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblComment> tblComments
		{
			get
			{
				return this.GetTable<tblComment>();
			}
		}
		
		public System.Data.Linq.Table<tblState> tblStates
		{
			get
			{
				return this.GetTable<tblState>();
			}
		}
		
		public System.Data.Linq.Table<tblCustomer> tblCustomers
		{
			get
			{
				return this.GetTable<tblCustomer>();
			}
		}
		
		public System.Data.Linq.Table<tblDepartment> tblDepartments
		{
			get
			{
				return this.GetTable<tblDepartment>();
			}
		}
		
		public System.Data.Linq.Table<tblDevice_Type> tblDevice_Types
		{
			get
			{
				return this.GetTable<tblDevice_Type>();
			}
		}
		
		public System.Data.Linq.Table<tblEmployee> tblEmployees
		{
			get
			{
				return this.GetTable<tblEmployee>();
			}
		}
		
		public System.Data.Linq.Table<tblOrder_Item> tblOrder_Items
		{
			get
			{
				return this.GetTable<tblOrder_Item>();
			}
		}
		
		public System.Data.Linq.Table<tblOrder_Status> tblOrder_Status
		{
			get
			{
				return this.GetTable<tblOrder_Status>();
			}
		}
		
		public System.Data.Linq.Table<tblOrder> tblOrders
		{
			get
			{
				return this.GetTable<tblOrder>();
			}
		}
		
		public System.Data.Linq.Table<tblProductBrand> tblProductBrands
		{
			get
			{
				return this.GetTable<tblProductBrand>();
			}
		}
		
		public System.Data.Linq.Table<tblService_Type> tblService_Types
		{
			get
			{
				return this.GetTable<tblService_Type>();
			}
		}
		
		public System.Data.Linq.Table<tblProductItem> tblProductItems
		{
			get
			{
				return this.GetTable<tblProductItem>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblComments")]
	public partial class tblComment
	{
		
		private int _Comment_ID;
		
		private string _Comment;
		
		private System.Nullable<int> _Order_ID;
		
		private System.DateTime _Timestamp;
		
		public tblComment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Comment_ID
		{
			get
			{
				return this._Comment_ID;
			}
			set
			{
				if ((this._Comment_ID != value))
				{
					this._Comment_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_ID", DbType="Int")]
		public System.Nullable<int> Order_ID
		{
			get
			{
				return this._Order_ID;
			}
			set
			{
				if ((this._Order_ID != value))
				{
					this._Order_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime2 NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this._Timestamp = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStates")]
	public partial class tblState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _State_ID;
		
		private string _State;
		
		private EntitySet<tblEmployee> _tblEmployees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnState_IDChanging(string value);
    partial void OnState_IDChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    #endregion
		
		public tblState()
		{
			this._tblEmployees = new EntitySet<tblEmployee>(new Action<tblEmployee>(this.attach_tblEmployees), new Action<tblEmployee>(this.detach_tblEmployees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_ID", DbType="NVarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string State_ID
		{
			get
			{
				return this._State_ID;
			}
			set
			{
				if ((this._State_ID != value))
				{
					this.OnState_IDChanging(value);
					this.SendPropertyChanging();
					this._State_ID = value;
					this.SendPropertyChanged("State_ID");
					this.OnState_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblState_tblEmployee", Storage="_tblEmployees", ThisKey="State_ID", OtherKey="State_Province")]
		public EntitySet<tblEmployee> tblEmployees
		{
			get
			{
				return this._tblEmployees;
			}
			set
			{
				this._tblEmployees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblEmployees(tblEmployee entity)
		{
			this.SendPropertyChanging();
			entity.tblState = this;
		}
		
		private void detach_tblEmployees(tblEmployee entity)
		{
			this.SendPropertyChanging();
			entity.tblState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCustomers")]
	public partial class tblCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Customer_ID;
		
		private string _First_Name_OR_Company;
		
		private System.Nullable<char> _Middle_Initial;
		
		private string _Last_Name;
		
		private string _Phone_Number;
		
		private string _Email;
		
		private EntitySet<tblOrder> _tblOrders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomer_IDChanging(int value);
    partial void OnCustomer_IDChanged();
    partial void OnFirst_Name_OR_CompanyChanging(string value);
    partial void OnFirst_Name_OR_CompanyChanged();
    partial void OnMiddle_InitialChanging(System.Nullable<char> value);
    partial void OnMiddle_InitialChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnPhone_NumberChanging(string value);
    partial void OnPhone_NumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public tblCustomer()
		{
			this._tblOrders = new EntitySet<tblOrder>(new Action<tblOrder>(this.attach_tblOrders), new Action<tblOrder>(this.detach_tblOrders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Customer_ID
		{
			get
			{
				return this._Customer_ID;
			}
			set
			{
				if ((this._Customer_ID != value))
				{
					this.OnCustomer_IDChanging(value);
					this.SendPropertyChanging();
					this._Customer_ID = value;
					this.SendPropertyChanged("Customer_ID");
					this.OnCustomer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name_OR_Company", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string First_Name_OR_Company
		{
			get
			{
				return this._First_Name_OR_Company;
			}
			set
			{
				if ((this._First_Name_OR_Company != value))
				{
					this.OnFirst_Name_OR_CompanyChanging(value);
					this.SendPropertyChanging();
					this._First_Name_OR_Company = value;
					this.SendPropertyChanged("First_Name_OR_Company");
					this.OnFirst_Name_OR_CompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middle_Initial", DbType="NChar(1)")]
		public System.Nullable<char> Middle_Initial
		{
			get
			{
				return this._Middle_Initial;
			}
			set
			{
				if ((this._Middle_Initial != value))
				{
					this.OnMiddle_InitialChanging(value);
					this.SendPropertyChanging();
					this._Middle_Initial = value;
					this.SendPropertyChanged("Middle_Initial");
					this.OnMiddle_InitialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="NVarChar(30)")]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_Number", DbType="NVarChar(14) NOT NULL", CanBeNull=false)]
		public string Phone_Number
		{
			get
			{
				return this._Phone_Number;
			}
			set
			{
				if ((this._Phone_Number != value))
				{
					this.OnPhone_NumberChanging(value);
					this.SendPropertyChanging();
					this._Phone_Number = value;
					this.SendPropertyChanged("Phone_Number");
					this.OnPhone_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(35)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCustomer_tblOrder", Storage="_tblOrders", ThisKey="Customer_ID", OtherKey="Customer_ID")]
		public EntitySet<tblOrder> tblOrders
		{
			get
			{
				return this._tblOrders;
			}
			set
			{
				this._tblOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblOrders(tblOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblCustomer = this;
		}
		
		private void detach_tblOrders(tblOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDepartments")]
	public partial class tblDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Department_ID;
		
		private string _Department_Name;
		
		private string _Description;
		
		private int _Supervisor;
		
		private EntitySet<tblEmployee> _tblEmployees;
		
		private EntityRef<tblEmployee> _tblEmployee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartment_IDChanging(int value);
    partial void OnDepartment_IDChanged();
    partial void OnDepartment_NameChanging(string value);
    partial void OnDepartment_NameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSupervisorChanging(int value);
    partial void OnSupervisorChanged();
    #endregion
		
		public tblDepartment()
		{
			this._tblEmployees = new EntitySet<tblEmployee>(new Action<tblEmployee>(this.attach_tblEmployees), new Action<tblEmployee>(this.detach_tblEmployees));
			this._tblEmployee = default(EntityRef<tblEmployee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Department_ID
		{
			get
			{
				return this._Department_ID;
			}
			set
			{
				if ((this._Department_ID != value))
				{
					this.OnDepartment_IDChanging(value);
					this.SendPropertyChanging();
					this._Department_ID = value;
					this.SendPropertyChanged("Department_ID");
					this.OnDepartment_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_Name", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string Department_Name
		{
			get
			{
				return this._Department_Name;
			}
			set
			{
				if ((this._Department_Name != value))
				{
					this.OnDepartment_NameChanging(value);
					this.SendPropertyChanging();
					this._Department_Name = value;
					this.SendPropertyChanged("Department_Name");
					this.OnDepartment_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supervisor", DbType="Int NOT NULL")]
		public int Supervisor
		{
			get
			{
				return this._Supervisor;
			}
			set
			{
				if ((this._Supervisor != value))
				{
					if (this._tblEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupervisorChanging(value);
					this.SendPropertyChanging();
					this._Supervisor = value;
					this.SendPropertyChanged("Supervisor");
					this.OnSupervisorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDepartment_tblEmployee", Storage="_tblEmployees", ThisKey="Department_ID", OtherKey="Department_ID")]
		public EntitySet<tblEmployee> tblEmployees
		{
			get
			{
				return this._tblEmployees;
			}
			set
			{
				this._tblEmployees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEmployee_tblDepartment", Storage="_tblEmployee", ThisKey="Supervisor", OtherKey="Employee_ID", IsForeignKey=true)]
		public tblEmployee tblEmployee
		{
			get
			{
				return this._tblEmployee.Entity;
			}
			set
			{
				tblEmployee previousValue = this._tblEmployee.Entity;
				if (((previousValue != value) 
							|| (this._tblEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblEmployee.Entity = null;
						previousValue.tblDepartments.Remove(this);
					}
					this._tblEmployee.Entity = value;
					if ((value != null))
					{
						value.tblDepartments.Add(this);
						this._Supervisor = value.Employee_ID;
					}
					else
					{
						this._Supervisor = default(int);
					}
					this.SendPropertyChanged("tblEmployee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblEmployees(tblEmployee entity)
		{
			this.SendPropertyChanging();
			entity.tblDepartment = this;
		}
		
		private void detach_tblEmployees(tblEmployee entity)
		{
			this.SendPropertyChanging();
			entity.tblDepartment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDevice_Types")]
	public partial class tblDevice_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Type_ID;
		
		private string _Type;
		
		private EntitySet<tblOrder_Item> _tblOrder_Items;
		
		private EntitySet<tblProductItem> _tblProductItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnType_IDChanging(int value);
    partial void OnType_IDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public tblDevice_Type()
		{
			this._tblOrder_Items = new EntitySet<tblOrder_Item>(new Action<tblOrder_Item>(this.attach_tblOrder_Items), new Action<tblOrder_Item>(this.detach_tblOrder_Items));
			this._tblProductItems = new EntitySet<tblProductItem>(new Action<tblProductItem>(this.attach_tblProductItems), new Action<tblProductItem>(this.detach_tblProductItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Type_ID
		{
			get
			{
				return this._Type_ID;
			}
			set
			{
				if ((this._Type_ID != value))
				{
					this.OnType_IDChanging(value);
					this.SendPropertyChanging();
					this._Type_ID = value;
					this.SendPropertyChanged("Type_ID");
					this.OnType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDevice_Type_tblOrder_Item", Storage="_tblOrder_Items", ThisKey="Type_ID", OtherKey="Type_ID")]
		public EntitySet<tblOrder_Item> tblOrder_Items
		{
			get
			{
				return this._tblOrder_Items;
			}
			set
			{
				this._tblOrder_Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDevice_Type_tblProductItem", Storage="_tblProductItems", ThisKey="Type_ID", OtherKey="Type_ID")]
		public EntitySet<tblProductItem> tblProductItems
		{
			get
			{
				return this._tblProductItems;
			}
			set
			{
				this._tblProductItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblOrder_Items(tblOrder_Item entity)
		{
			this.SendPropertyChanging();
			entity.tblDevice_Type = this;
		}
		
		private void detach_tblOrder_Items(tblOrder_Item entity)
		{
			this.SendPropertyChanging();
			entity.tblDevice_Type = null;
		}
		
		private void attach_tblProductItems(tblProductItem entity)
		{
			this.SendPropertyChanging();
			entity.tblDevice_Type = this;
		}
		
		private void detach_tblProductItems(tblProductItem entity)
		{
			this.SendPropertyChanging();
			entity.tblDevice_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEmployees")]
	public partial class tblEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Employee_ID;
		
		private string _First_Name;
		
		private System.Nullable<char> _Middle_Initial;
		
		private string _Last_Name;
		
		private string _Street_Address;
		
		private string _City;
		
		private string _State_Province;
		
		private string _Zip_Code;
		
		private string _Phone_Number;
		
		private string _SSN;
		
		private string _Drivers_Lic_Num;
		
		private string _Drivers_Lic_State;
		
		private bool _Is_Supervisor;
		
		private int _Department_ID;
		
		private EntitySet<tblDepartment> _tblDepartments;
		
		private EntitySet<tblOrder> _tblOrders;
		
		private EntityRef<tblDepartment> _tblDepartment;
		
		private EntityRef<tblState> _tblState;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployee_IDChanging(int value);
    partial void OnEmployee_IDChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnMiddle_InitialChanging(System.Nullable<char> value);
    partial void OnMiddle_InitialChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnStreet_AddressChanging(string value);
    partial void OnStreet_AddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnState_ProvinceChanging(string value);
    partial void OnState_ProvinceChanged();
    partial void OnZip_CodeChanging(string value);
    partial void OnZip_CodeChanged();
    partial void OnPhone_NumberChanging(string value);
    partial void OnPhone_NumberChanged();
    partial void OnSSNChanging(string value);
    partial void OnSSNChanged();
    partial void OnDrivers_Lic_NumChanging(string value);
    partial void OnDrivers_Lic_NumChanged();
    partial void OnDrivers_Lic_StateChanging(string value);
    partial void OnDrivers_Lic_StateChanged();
    partial void OnIs_SupervisorChanging(bool value);
    partial void OnIs_SupervisorChanged();
    partial void OnDepartment_IDChanging(int value);
    partial void OnDepartment_IDChanged();
    #endregion
		
		public tblEmployee()
		{
			this._tblDepartments = new EntitySet<tblDepartment>(new Action<tblDepartment>(this.attach_tblDepartments), new Action<tblDepartment>(this.detach_tblDepartments));
			this._tblOrders = new EntitySet<tblOrder>(new Action<tblOrder>(this.attach_tblOrders), new Action<tblOrder>(this.detach_tblOrders));
			this._tblDepartment = default(EntityRef<tblDepartment>);
			this._tblState = default(EntityRef<tblState>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Employee_ID
		{
			get
			{
				return this._Employee_ID;
			}
			set
			{
				if ((this._Employee_ID != value))
				{
					this.OnEmployee_IDChanging(value);
					this.SendPropertyChanging();
					this._Employee_ID = value;
					this.SendPropertyChanged("Employee_ID");
					this.OnEmployee_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middle_Initial", DbType="Char(1)")]
		public System.Nullable<char> Middle_Initial
		{
			get
			{
				return this._Middle_Initial;
			}
			set
			{
				if ((this._Middle_Initial != value))
				{
					this.OnMiddle_InitialChanging(value);
					this.SendPropertyChanging();
					this._Middle_Initial = value;
					this.SendPropertyChanged("Middle_Initial");
					this.OnMiddle_InitialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="NVarChar(35) NOT NULL", CanBeNull=false)]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street_Address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Street_Address
		{
			get
			{
				return this._Street_Address;
			}
			set
			{
				if ((this._Street_Address != value))
				{
					this.OnStreet_AddressChanging(value);
					this.SendPropertyChanging();
					this._Street_Address = value;
					this.SendPropertyChanged("Street_Address");
					this.OnStreet_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_Province", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string State_Province
		{
			get
			{
				return this._State_Province;
			}
			set
			{
				if ((this._State_Province != value))
				{
					if (this._tblState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnState_ProvinceChanging(value);
					this.SendPropertyChanging();
					this._State_Province = value;
					this.SendPropertyChanged("State_Province");
					this.OnState_ProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip_Code", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string Zip_Code
		{
			get
			{
				return this._Zip_Code;
			}
			set
			{
				if ((this._Zip_Code != value))
				{
					this.OnZip_CodeChanging(value);
					this.SendPropertyChanging();
					this._Zip_Code = value;
					this.SendPropertyChanged("Zip_Code");
					this.OnZip_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_Number", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Phone_Number
		{
			get
			{
				return this._Phone_Number;
			}
			set
			{
				if ((this._Phone_Number != value))
				{
					this.OnPhone_NumberChanging(value);
					this.SendPropertyChanging();
					this._Phone_Number = value;
					this.SendPropertyChanged("Phone_Number");
					this.OnPhone_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSN", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string SSN
		{
			get
			{
				return this._SSN;
			}
			set
			{
				if ((this._SSN != value))
				{
					this.OnSSNChanging(value);
					this.SendPropertyChanging();
					this._SSN = value;
					this.SendPropertyChanged("SSN");
					this.OnSSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Drivers_Lic_Num", DbType="NVarChar(15)")]
		public string Drivers_Lic_Num
		{
			get
			{
				return this._Drivers_Lic_Num;
			}
			set
			{
				if ((this._Drivers_Lic_Num != value))
				{
					this.OnDrivers_Lic_NumChanging(value);
					this.SendPropertyChanging();
					this._Drivers_Lic_Num = value;
					this.SendPropertyChanged("Drivers_Lic_Num");
					this.OnDrivers_Lic_NumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Drivers_Lic_State", DbType="NVarChar(2)")]
		public string Drivers_Lic_State
		{
			get
			{
				return this._Drivers_Lic_State;
			}
			set
			{
				if ((this._Drivers_Lic_State != value))
				{
					this.OnDrivers_Lic_StateChanging(value);
					this.SendPropertyChanging();
					this._Drivers_Lic_State = value;
					this.SendPropertyChanged("Drivers_Lic_State");
					this.OnDrivers_Lic_StateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Supervisor", DbType="Bit NOT NULL")]
		public bool Is_Supervisor
		{
			get
			{
				return this._Is_Supervisor;
			}
			set
			{
				if ((this._Is_Supervisor != value))
				{
					this.OnIs_SupervisorChanging(value);
					this.SendPropertyChanging();
					this._Is_Supervisor = value;
					this.SendPropertyChanged("Is_Supervisor");
					this.OnIs_SupervisorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_ID", DbType="Int NOT NULL")]
		public int Department_ID
		{
			get
			{
				return this._Department_ID;
			}
			set
			{
				if ((this._Department_ID != value))
				{
					if (this._tblDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartment_IDChanging(value);
					this.SendPropertyChanging();
					this._Department_ID = value;
					this.SendPropertyChanged("Department_ID");
					this.OnDepartment_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEmployee_tblDepartment", Storage="_tblDepartments", ThisKey="Employee_ID", OtherKey="Supervisor")]
		public EntitySet<tblDepartment> tblDepartments
		{
			get
			{
				return this._tblDepartments;
			}
			set
			{
				this._tblDepartments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEmployee_tblOrder", Storage="_tblOrders", ThisKey="Employee_ID", OtherKey="Emp_In_Charge")]
		public EntitySet<tblOrder> tblOrders
		{
			get
			{
				return this._tblOrders;
			}
			set
			{
				this._tblOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDepartment_tblEmployee", Storage="_tblDepartment", ThisKey="Department_ID", OtherKey="Department_ID", IsForeignKey=true)]
		public tblDepartment tblDepartment
		{
			get
			{
				return this._tblDepartment.Entity;
			}
			set
			{
				tblDepartment previousValue = this._tblDepartment.Entity;
				if (((previousValue != value) 
							|| (this._tblDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblDepartment.Entity = null;
						previousValue.tblEmployees.Remove(this);
					}
					this._tblDepartment.Entity = value;
					if ((value != null))
					{
						value.tblEmployees.Add(this);
						this._Department_ID = value.Department_ID;
					}
					else
					{
						this._Department_ID = default(int);
					}
					this.SendPropertyChanged("tblDepartment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblState_tblEmployee", Storage="_tblState", ThisKey="State_Province", OtherKey="State_ID", IsForeignKey=true)]
		public tblState tblState
		{
			get
			{
				return this._tblState.Entity;
			}
			set
			{
				tblState previousValue = this._tblState.Entity;
				if (((previousValue != value) 
							|| (this._tblState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblState.Entity = null;
						previousValue.tblEmployees.Remove(this);
					}
					this._tblState.Entity = value;
					if ((value != null))
					{
						value.tblEmployees.Add(this);
						this._State_Province = value.State_ID;
					}
					else
					{
						this._State_Province = default(string);
					}
					this.SendPropertyChanged("tblState");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblDepartments(tblDepartment entity)
		{
			this.SendPropertyChanging();
			entity.tblEmployee = this;
		}
		
		private void detach_tblDepartments(tblDepartment entity)
		{
			this.SendPropertyChanging();
			entity.tblEmployee = null;
		}
		
		private void attach_tblOrders(tblOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblEmployee = this;
		}
		
		private void detach_tblOrders(tblOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblEmployee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblOrder_Items")]
	public partial class tblOrder_Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Item_ID;
		
		private string _Model;
		
		private string _Serial_Number;
		
		private decimal _Price;
		
		private int _Quantity;
		
		private string _Comments;
		
		private int _Type_ID;
		
		private int _Brand_ID;
		
		private int _Order_ID;
		
		private EntityRef<tblDevice_Type> _tblDevice_Type;
		
		private EntityRef<tblOrder> _tblOrder;
		
		private EntityRef<tblProductBrand> _tblProductBrand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItem_IDChanging(int value);
    partial void OnItem_IDChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnSerial_NumberChanging(string value);
    partial void OnSerial_NumberChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnType_IDChanging(int value);
    partial void OnType_IDChanged();
    partial void OnBrand_IDChanging(int value);
    partial void OnBrand_IDChanged();
    partial void OnOrder_IDChanging(int value);
    partial void OnOrder_IDChanged();
    #endregion
		
		public tblOrder_Item()
		{
			this._tblDevice_Type = default(EntityRef<tblDevice_Type>);
			this._tblOrder = default(EntityRef<tblOrder>);
			this._tblProductBrand = default(EntityRef<tblProductBrand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial_Number", DbType="NVarChar(50)")]
		public string Serial_Number
		{
			get
			{
				return this._Serial_Number;
			}
			set
			{
				if ((this._Serial_Number != value))
				{
					this.OnSerial_NumberChanging(value);
					this.SendPropertyChanging();
					this._Serial_Number = value;
					this.SendPropertyChanged("Serial_Number");
					this.OnSerial_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_ID", DbType="Int NOT NULL")]
		public int Type_ID
		{
			get
			{
				return this._Type_ID;
			}
			set
			{
				if ((this._Type_ID != value))
				{
					if (this._tblDevice_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnType_IDChanging(value);
					this.SendPropertyChanging();
					this._Type_ID = value;
					this.SendPropertyChanged("Type_ID");
					this.OnType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand_ID", DbType="Int NOT NULL")]
		public int Brand_ID
		{
			get
			{
				return this._Brand_ID;
			}
			set
			{
				if ((this._Brand_ID != value))
				{
					if (this._tblProductBrand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrand_IDChanging(value);
					this.SendPropertyChanging();
					this._Brand_ID = value;
					this.SendPropertyChanged("Brand_ID");
					this.OnBrand_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_ID", DbType="Int NOT NULL")]
		public int Order_ID
		{
			get
			{
				return this._Order_ID;
			}
			set
			{
				if ((this._Order_ID != value))
				{
					if (this._tblOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_IDChanging(value);
					this.SendPropertyChanging();
					this._Order_ID = value;
					this.SendPropertyChanged("Order_ID");
					this.OnOrder_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDevice_Type_tblOrder_Item", Storage="_tblDevice_Type", ThisKey="Type_ID", OtherKey="Type_ID", IsForeignKey=true)]
		public tblDevice_Type tblDevice_Type
		{
			get
			{
				return this._tblDevice_Type.Entity;
			}
			set
			{
				tblDevice_Type previousValue = this._tblDevice_Type.Entity;
				if (((previousValue != value) 
							|| (this._tblDevice_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblDevice_Type.Entity = null;
						previousValue.tblOrder_Items.Remove(this);
					}
					this._tblDevice_Type.Entity = value;
					if ((value != null))
					{
						value.tblOrder_Items.Add(this);
						this._Type_ID = value.Type_ID;
					}
					else
					{
						this._Type_ID = default(int);
					}
					this.SendPropertyChanged("tblDevice_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblOrder_tblOrder_Item", Storage="_tblOrder", ThisKey="Order_ID", OtherKey="Order_ID", IsForeignKey=true)]
		public tblOrder tblOrder
		{
			get
			{
				return this._tblOrder.Entity;
			}
			set
			{
				tblOrder previousValue = this._tblOrder.Entity;
				if (((previousValue != value) 
							|| (this._tblOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblOrder.Entity = null;
						previousValue.tblOrder_Items.Remove(this);
					}
					this._tblOrder.Entity = value;
					if ((value != null))
					{
						value.tblOrder_Items.Add(this);
						this._Order_ID = value.Order_ID;
					}
					else
					{
						this._Order_ID = default(int);
					}
					this.SendPropertyChanged("tblOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProductBrand_tblOrder_Item", Storage="_tblProductBrand", ThisKey="Brand_ID", OtherKey="Brand_ID", IsForeignKey=true)]
		public tblProductBrand tblProductBrand
		{
			get
			{
				return this._tblProductBrand.Entity;
			}
			set
			{
				tblProductBrand previousValue = this._tblProductBrand.Entity;
				if (((previousValue != value) 
							|| (this._tblProductBrand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProductBrand.Entity = null;
						previousValue.tblOrder_Items.Remove(this);
					}
					this._tblProductBrand.Entity = value;
					if ((value != null))
					{
						value.tblOrder_Items.Add(this);
						this._Brand_ID = value.Brand_ID;
					}
					else
					{
						this._Brand_ID = default(int);
					}
					this.SendPropertyChanged("tblProductBrand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblOrder_Status")]
	public partial class tblOrder_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Status_ID;
		
		private string _Status;
		
		private EntitySet<tblOrder> _tblOrders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatus_IDChanging(int value);
    partial void OnStatus_IDChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public tblOrder_Status()
		{
			this._tblOrders = new EntitySet<tblOrder>(new Action<tblOrder>(this.attach_tblOrders), new Action<tblOrder>(this.detach_tblOrders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Status_ID
		{
			get
			{
				return this._Status_ID;
			}
			set
			{
				if ((this._Status_ID != value))
				{
					this.OnStatus_IDChanging(value);
					this.SendPropertyChanging();
					this._Status_ID = value;
					this.SendPropertyChanged("Status_ID");
					this.OnStatus_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblOrder_Status_tblOrder", Storage="_tblOrders", ThisKey="Status_ID", OtherKey="Status_ID")]
		public EntitySet<tblOrder> tblOrders
		{
			get
			{
				return this._tblOrders;
			}
			set
			{
				this._tblOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblOrders(tblOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblOrder_Status = this;
		}
		
		private void detach_tblOrders(tblOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblOrder_Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblOrders")]
	public partial class tblOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Order_ID;
		
		private System.DateTime _Order_Date;
		
		private System.Nullable<System.DateTime> _Finish_Date;
		
		private decimal _Total;
		
		private int _Customer_ID;
		
		private int _Emp_In_Charge;
		
		private System.Nullable<int> _Status_ID;
		
		private int _Service_Type_ID;
		
		private EntitySet<tblOrder_Item> _tblOrder_Items;
		
		private EntityRef<tblCustomer> _tblCustomer;
		
		private EntityRef<tblEmployee> _tblEmployee;
		
		private EntityRef<tblOrder_Status> _tblOrder_Status;
		
		private EntityRef<tblService_Type> _tblService_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_IDChanging(int value);
    partial void OnOrder_IDChanged();
    partial void OnOrder_DateChanging(System.DateTime value);
    partial void OnOrder_DateChanged();
    partial void OnFinish_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinish_DateChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    partial void OnCustomer_IDChanging(int value);
    partial void OnCustomer_IDChanged();
    partial void OnEmp_In_ChargeChanging(int value);
    partial void OnEmp_In_ChargeChanged();
    partial void OnStatus_IDChanging(System.Nullable<int> value);
    partial void OnStatus_IDChanged();
    partial void OnService_Type_IDChanging(int value);
    partial void OnService_Type_IDChanged();
    #endregion
		
		public tblOrder()
		{
			this._tblOrder_Items = new EntitySet<tblOrder_Item>(new Action<tblOrder_Item>(this.attach_tblOrder_Items), new Action<tblOrder_Item>(this.detach_tblOrder_Items));
			this._tblCustomer = default(EntityRef<tblCustomer>);
			this._tblEmployee = default(EntityRef<tblEmployee>);
			this._tblOrder_Status = default(EntityRef<tblOrder_Status>);
			this._tblService_Type = default(EntityRef<tblService_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Order_ID
		{
			get
			{
				return this._Order_ID;
			}
			set
			{
				if ((this._Order_ID != value))
				{
					this.OnOrder_IDChanging(value);
					this.SendPropertyChanging();
					this._Order_ID = value;
					this.SendPropertyChanged("Order_ID");
					this.OnOrder_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_Date", DbType="Date NOT NULL")]
		public System.DateTime Order_Date
		{
			get
			{
				return this._Order_Date;
			}
			set
			{
				if ((this._Order_Date != value))
				{
					this.OnOrder_DateChanging(value);
					this.SendPropertyChanging();
					this._Order_Date = value;
					this.SendPropertyChanged("Order_Date");
					this.OnOrder_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Finish_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Finish_Date
		{
			get
			{
				return this._Finish_Date;
			}
			set
			{
				if ((this._Finish_Date != value))
				{
					this.OnFinish_DateChanging(value);
					this.SendPropertyChanging();
					this._Finish_Date = value;
					this.SendPropertyChanged("Finish_Date");
					this.OnFinish_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Money NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_ID", DbType="Int NOT NULL")]
		public int Customer_ID
		{
			get
			{
				return this._Customer_ID;
			}
			set
			{
				if ((this._Customer_ID != value))
				{
					if (this._tblCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomer_IDChanging(value);
					this.SendPropertyChanging();
					this._Customer_ID = value;
					this.SendPropertyChanged("Customer_ID");
					this.OnCustomer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_In_Charge", DbType="Int NOT NULL")]
		public int Emp_In_Charge
		{
			get
			{
				return this._Emp_In_Charge;
			}
			set
			{
				if ((this._Emp_In_Charge != value))
				{
					if (this._tblEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmp_In_ChargeChanging(value);
					this.SendPropertyChanging();
					this._Emp_In_Charge = value;
					this.SendPropertyChanged("Emp_In_Charge");
					this.OnEmp_In_ChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_ID", DbType="Int")]
		public System.Nullable<int> Status_ID
		{
			get
			{
				return this._Status_ID;
			}
			set
			{
				if ((this._Status_ID != value))
				{
					if (this._tblOrder_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatus_IDChanging(value);
					this.SendPropertyChanging();
					this._Status_ID = value;
					this.SendPropertyChanged("Status_ID");
					this.OnStatus_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service_Type_ID", DbType="Int NOT NULL")]
		public int Service_Type_ID
		{
			get
			{
				return this._Service_Type_ID;
			}
			set
			{
				if ((this._Service_Type_ID != value))
				{
					if (this._tblService_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnService_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Service_Type_ID = value;
					this.SendPropertyChanged("Service_Type_ID");
					this.OnService_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblOrder_tblOrder_Item", Storage="_tblOrder_Items", ThisKey="Order_ID", OtherKey="Order_ID")]
		public EntitySet<tblOrder_Item> tblOrder_Items
		{
			get
			{
				return this._tblOrder_Items;
			}
			set
			{
				this._tblOrder_Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCustomer_tblOrder", Storage="_tblCustomer", ThisKey="Customer_ID", OtherKey="Customer_ID", IsForeignKey=true)]
		public tblCustomer tblCustomer
		{
			get
			{
				return this._tblCustomer.Entity;
			}
			set
			{
				tblCustomer previousValue = this._tblCustomer.Entity;
				if (((previousValue != value) 
							|| (this._tblCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCustomer.Entity = null;
						previousValue.tblOrders.Remove(this);
					}
					this._tblCustomer.Entity = value;
					if ((value != null))
					{
						value.tblOrders.Add(this);
						this._Customer_ID = value.Customer_ID;
					}
					else
					{
						this._Customer_ID = default(int);
					}
					this.SendPropertyChanged("tblCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEmployee_tblOrder", Storage="_tblEmployee", ThisKey="Emp_In_Charge", OtherKey="Employee_ID", IsForeignKey=true)]
		public tblEmployee tblEmployee
		{
			get
			{
				return this._tblEmployee.Entity;
			}
			set
			{
				tblEmployee previousValue = this._tblEmployee.Entity;
				if (((previousValue != value) 
							|| (this._tblEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblEmployee.Entity = null;
						previousValue.tblOrders.Remove(this);
					}
					this._tblEmployee.Entity = value;
					if ((value != null))
					{
						value.tblOrders.Add(this);
						this._Emp_In_Charge = value.Employee_ID;
					}
					else
					{
						this._Emp_In_Charge = default(int);
					}
					this.SendPropertyChanged("tblEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblOrder_Status_tblOrder", Storage="_tblOrder_Status", ThisKey="Status_ID", OtherKey="Status_ID", IsForeignKey=true)]
		public tblOrder_Status tblOrder_Status
		{
			get
			{
				return this._tblOrder_Status.Entity;
			}
			set
			{
				tblOrder_Status previousValue = this._tblOrder_Status.Entity;
				if (((previousValue != value) 
							|| (this._tblOrder_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblOrder_Status.Entity = null;
						previousValue.tblOrders.Remove(this);
					}
					this._tblOrder_Status.Entity = value;
					if ((value != null))
					{
						value.tblOrders.Add(this);
						this._Status_ID = value.Status_ID;
					}
					else
					{
						this._Status_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblOrder_Status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblService_Type_tblOrder", Storage="_tblService_Type", ThisKey="Service_Type_ID", OtherKey="Service_Type_ID", IsForeignKey=true)]
		public tblService_Type tblService_Type
		{
			get
			{
				return this._tblService_Type.Entity;
			}
			set
			{
				tblService_Type previousValue = this._tblService_Type.Entity;
				if (((previousValue != value) 
							|| (this._tblService_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblService_Type.Entity = null;
						previousValue.tblOrders.Remove(this);
					}
					this._tblService_Type.Entity = value;
					if ((value != null))
					{
						value.tblOrders.Add(this);
						this._Service_Type_ID = value.Service_Type_ID;
					}
					else
					{
						this._Service_Type_ID = default(int);
					}
					this.SendPropertyChanged("tblService_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblOrder_Items(tblOrder_Item entity)
		{
			this.SendPropertyChanging();
			entity.tblOrder = this;
		}
		
		private void detach_tblOrder_Items(tblOrder_Item entity)
		{
			this.SendPropertyChanging();
			entity.tblOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblProductBrands")]
	public partial class tblProductBrand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Brand_ID;
		
		private string _Brand_Name;
		
		private EntitySet<tblOrder_Item> _tblOrder_Items;
		
		private EntitySet<tblProductItem> _tblProductItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBrand_IDChanging(int value);
    partial void OnBrand_IDChanged();
    partial void OnBrand_NameChanging(string value);
    partial void OnBrand_NameChanged();
    #endregion
		
		public tblProductBrand()
		{
			this._tblOrder_Items = new EntitySet<tblOrder_Item>(new Action<tblOrder_Item>(this.attach_tblOrder_Items), new Action<tblOrder_Item>(this.detach_tblOrder_Items));
			this._tblProductItems = new EntitySet<tblProductItem>(new Action<tblProductItem>(this.attach_tblProductItems), new Action<tblProductItem>(this.detach_tblProductItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Brand_ID
		{
			get
			{
				return this._Brand_ID;
			}
			set
			{
				if ((this._Brand_ID != value))
				{
					this.OnBrand_IDChanging(value);
					this.SendPropertyChanging();
					this._Brand_ID = value;
					this.SendPropertyChanged("Brand_ID");
					this.OnBrand_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Brand_Name
		{
			get
			{
				return this._Brand_Name;
			}
			set
			{
				if ((this._Brand_Name != value))
				{
					this.OnBrand_NameChanging(value);
					this.SendPropertyChanging();
					this._Brand_Name = value;
					this.SendPropertyChanged("Brand_Name");
					this.OnBrand_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProductBrand_tblOrder_Item", Storage="_tblOrder_Items", ThisKey="Brand_ID", OtherKey="Brand_ID")]
		public EntitySet<tblOrder_Item> tblOrder_Items
		{
			get
			{
				return this._tblOrder_Items;
			}
			set
			{
				this._tblOrder_Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProductBrand_tblProductItem", Storage="_tblProductItems", ThisKey="Brand_ID", OtherKey="Brand_ID")]
		public EntitySet<tblProductItem> tblProductItems
		{
			get
			{
				return this._tblProductItems;
			}
			set
			{
				this._tblProductItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblOrder_Items(tblOrder_Item entity)
		{
			this.SendPropertyChanging();
			entity.tblProductBrand = this;
		}
		
		private void detach_tblOrder_Items(tblOrder_Item entity)
		{
			this.SendPropertyChanging();
			entity.tblProductBrand = null;
		}
		
		private void attach_tblProductItems(tblProductItem entity)
		{
			this.SendPropertyChanging();
			entity.tblProductBrand = this;
		}
		
		private void detach_tblProductItems(tblProductItem entity)
		{
			this.SendPropertyChanging();
			entity.tblProductBrand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblService_Types")]
	public partial class tblService_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Service_Type_ID;
		
		private string _Service_Desc;
		
		private System.Nullable<decimal> _Base_Price;
		
		private System.Nullable<decimal> _Per_Hour;
		
		private System.Nullable<decimal> _Per_Day;
		
		private System.Nullable<decimal> _Per_Year;
		
		private EntitySet<tblOrder> _tblOrders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnService_Type_IDChanging(int value);
    partial void OnService_Type_IDChanged();
    partial void OnService_DescChanging(string value);
    partial void OnService_DescChanged();
    partial void OnBase_PriceChanging(System.Nullable<decimal> value);
    partial void OnBase_PriceChanged();
    partial void OnPer_HourChanging(System.Nullable<decimal> value);
    partial void OnPer_HourChanged();
    partial void OnPer_DayChanging(System.Nullable<decimal> value);
    partial void OnPer_DayChanged();
    partial void OnPer_YearChanging(System.Nullable<decimal> value);
    partial void OnPer_YearChanged();
    #endregion
		
		public tblService_Type()
		{
			this._tblOrders = new EntitySet<tblOrder>(new Action<tblOrder>(this.attach_tblOrders), new Action<tblOrder>(this.detach_tblOrders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service_Type_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Service_Type_ID
		{
			get
			{
				return this._Service_Type_ID;
			}
			set
			{
				if ((this._Service_Type_ID != value))
				{
					this.OnService_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Service_Type_ID = value;
					this.SendPropertyChanged("Service_Type_ID");
					this.OnService_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service_Desc", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Service_Desc
		{
			get
			{
				return this._Service_Desc;
			}
			set
			{
				if ((this._Service_Desc != value))
				{
					this.OnService_DescChanging(value);
					this.SendPropertyChanging();
					this._Service_Desc = value;
					this.SendPropertyChanged("Service_Desc");
					this.OnService_DescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Base_Price", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> Base_Price
		{
			get
			{
				return this._Base_Price;
			}
			set
			{
				if ((this._Base_Price != value))
				{
					this.OnBase_PriceChanging(value);
					this.SendPropertyChanging();
					this._Base_Price = value;
					this.SendPropertyChanged("Base_Price");
					this.OnBase_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Per_Hour", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> Per_Hour
		{
			get
			{
				return this._Per_Hour;
			}
			set
			{
				if ((this._Per_Hour != value))
				{
					this.OnPer_HourChanging(value);
					this.SendPropertyChanging();
					this._Per_Hour = value;
					this.SendPropertyChanged("Per_Hour");
					this.OnPer_HourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Per_Day", DbType="Decimal(7,2)")]
		public System.Nullable<decimal> Per_Day
		{
			get
			{
				return this._Per_Day;
			}
			set
			{
				if ((this._Per_Day != value))
				{
					this.OnPer_DayChanging(value);
					this.SendPropertyChanging();
					this._Per_Day = value;
					this.SendPropertyChanged("Per_Day");
					this.OnPer_DayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Per_Year", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> Per_Year
		{
			get
			{
				return this._Per_Year;
			}
			set
			{
				if ((this._Per_Year != value))
				{
					this.OnPer_YearChanging(value);
					this.SendPropertyChanging();
					this._Per_Year = value;
					this.SendPropertyChanged("Per_Year");
					this.OnPer_YearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblService_Type_tblOrder", Storage="_tblOrders", ThisKey="Service_Type_ID", OtherKey="Service_Type_ID")]
		public EntitySet<tblOrder> tblOrders
		{
			get
			{
				return this._tblOrders;
			}
			set
			{
				this._tblOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblOrders(tblOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblService_Type = this;
		}
		
		private void detach_tblOrders(tblOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblService_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblProductItems")]
	public partial class tblProductItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Product_ID;
		
		private string _Model;
		
		private decimal _Price;
		
		private bool _Is_In_Stock;
		
		private int _Quantity;
		
		private string _Comments;
		
		private int _Type_ID;
		
		private int _Brand_ID;
		
		private string _Serial_Number;
		
		private EntityRef<tblProductBrand> _tblProductBrand;
		
		private EntityRef<tblDevice_Type> _tblDevice_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProduct_IDChanging(int value);
    partial void OnProduct_IDChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnIs_In_StockChanging(bool value);
    partial void OnIs_In_StockChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnType_IDChanging(int value);
    partial void OnType_IDChanged();
    partial void OnBrand_IDChanging(int value);
    partial void OnBrand_IDChanged();
    partial void OnSerial_NumberChanging(string value);
    partial void OnSerial_NumberChanged();
    #endregion
		
		public tblProductItem()
		{
			this._tblProductBrand = default(EntityRef<tblProductBrand>);
			this._tblDevice_Type = default(EntityRef<tblDevice_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Product_ID
		{
			get
			{
				return this._Product_ID;
			}
			set
			{
				if ((this._Product_ID != value))
				{
					this.OnProduct_IDChanging(value);
					this.SendPropertyChanging();
					this._Product_ID = value;
					this.SendPropertyChanged("Product_ID");
					this.OnProduct_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_In_Stock", DbType="Bit NOT NULL")]
		public bool Is_In_Stock
		{
			get
			{
				return this._Is_In_Stock;
			}
			set
			{
				if ((this._Is_In_Stock != value))
				{
					this.OnIs_In_StockChanging(value);
					this.SendPropertyChanging();
					this._Is_In_Stock = value;
					this.SendPropertyChanged("Is_In_Stock");
					this.OnIs_In_StockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_ID", DbType="Int NOT NULL")]
		public int Type_ID
		{
			get
			{
				return this._Type_ID;
			}
			set
			{
				if ((this._Type_ID != value))
				{
					if (this._tblDevice_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnType_IDChanging(value);
					this.SendPropertyChanging();
					this._Type_ID = value;
					this.SendPropertyChanged("Type_ID");
					this.OnType_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand_ID", DbType="Int NOT NULL")]
		public int Brand_ID
		{
			get
			{
				return this._Brand_ID;
			}
			set
			{
				if ((this._Brand_ID != value))
				{
					if (this._tblProductBrand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrand_IDChanging(value);
					this.SendPropertyChanging();
					this._Brand_ID = value;
					this.SendPropertyChanged("Brand_ID");
					this.OnBrand_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial_Number", DbType="NVarChar(50)")]
		public string Serial_Number
		{
			get
			{
				return this._Serial_Number;
			}
			set
			{
				if ((this._Serial_Number != value))
				{
					this.OnSerial_NumberChanging(value);
					this.SendPropertyChanging();
					this._Serial_Number = value;
					this.SendPropertyChanged("Serial_Number");
					this.OnSerial_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProductBrand_tblProductItem", Storage="_tblProductBrand", ThisKey="Brand_ID", OtherKey="Brand_ID", IsForeignKey=true)]
		public tblProductBrand tblProductBrand
		{
			get
			{
				return this._tblProductBrand.Entity;
			}
			set
			{
				tblProductBrand previousValue = this._tblProductBrand.Entity;
				if (((previousValue != value) 
							|| (this._tblProductBrand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProductBrand.Entity = null;
						previousValue.tblProductItems.Remove(this);
					}
					this._tblProductBrand.Entity = value;
					if ((value != null))
					{
						value.tblProductItems.Add(this);
						this._Brand_ID = value.Brand_ID;
					}
					else
					{
						this._Brand_ID = default(int);
					}
					this.SendPropertyChanged("tblProductBrand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDevice_Type_tblProductItem", Storage="_tblDevice_Type", ThisKey="Type_ID", OtherKey="Type_ID", IsForeignKey=true)]
		public tblDevice_Type tblDevice_Type
		{
			get
			{
				return this._tblDevice_Type.Entity;
			}
			set
			{
				tblDevice_Type previousValue = this._tblDevice_Type.Entity;
				if (((previousValue != value) 
							|| (this._tblDevice_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblDevice_Type.Entity = null;
						previousValue.tblProductItems.Remove(this);
					}
					this._tblDevice_Type.Entity = value;
					if ((value != null))
					{
						value.tblProductItems.Add(this);
						this._Type_ID = value.Type_ID;
					}
					else
					{
						this._Type_ID = default(int);
					}
					this.SendPropertyChanged("tblDevice_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
